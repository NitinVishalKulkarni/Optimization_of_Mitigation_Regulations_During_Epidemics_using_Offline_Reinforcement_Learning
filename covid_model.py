import numpy as np
import pandas as pd

ny_state_population = 19_450_000

# This list contains the total cases so far.
total_cases = [328,421,528,740,975,1717,3060,5402,8455,10449,15891,21016,26534,33211,39311,46694,53947,61363,68151,76978,85085,94442,105075,116586,125067,134206,144925,153929,164467,175517,184490,192952,199374,206991,218657,226296,234052,241145,247322,252203,256666,262381,268697,277565,288438,294118,298133,301580,306290,310973,315358,319351,324023,327515,330281,333634,337566,340875,344210,346628,348824,350449,353245,356182,359940,362795,364767,367002,368803,370854,373550,375713,377369,379170,380562,382014,383195,385196,387138,388790,390073,391244,392691,393810,395408,396873,397984,399002,400066,400834,401664,402509,403559,404611,405429,406255,407058,407797,408600,409767,410608,411438,412146,412810,413529,414448,415381,416192,416961,417502,418010,418779,419814,420948,421811,422442,423025,423667,424437,425246,426190,426981,427812,428477,429452,430451,431554,432586,433488,434338,435045,435927,436750,437703,438609,439454,440059,440840,441436,442234,443174,444098,444853,445320,446015,446865,447553,448342,449165,450002,450606,451199,451910,452683,453506,454322,455113,455772,456292,457010,457774,458453,459270,459971,460634,461165,461792,462468,463369,464089,464769,465549,466292,467623,468405,469390,470636,471443,472185,472743,473755,474384,475211,476197,477066,477782,478555,479360,480083,481075,481964,482997,483880,484612,485394,486112,487155,488139,489146,490040,491036,492234,493332,494785,496493,498214,499442,500596,502006,503473,505414,507075,508501,509646,510796,512339,513648,515213,516942,518732,520186,521408,522707,524768,526477,528263,530258,531847,533264,535321,537406,539996,542298,544275,546452,548275,550704,552863,555920,559161,562577,565929,569508,573465,578076,583133,588605,593767,597394,601457,606624,611988,617741,623242,628808,634035,640356,645834,651830,658637,666642,672393,679111,686446,694060,703443,713587,724437,734600,743876,752073,761795,772399,782680,793396,803912,813788,823599,834212,844340,855526,868068,877399,887177,896945,906834,919159,931642,943264,954087,961869,972951,984638,998524,1015573,1029146,1043789,1057162,1069073,1082147,1098899,1116929,1135593,1152214,1167149,1182351,1197391,1212324,1226311,1246488,1261668,1275196,1287593,1301191,1314916,1328973,1344365,1357440,1370149,1383162,1394675,1405906,1419485,1432343,1444854,1455386,1464810,1473172,1479263,1486879,1495835,1506919,1516709,1525710,1534029,1541314,1551628,1560288,1568969,1577219,1583618,1591015,1597308,1604469,1613432,1621041,1627523,1634271,1641112,1647482,1656533,1664958,1673171,1680688,1687443,1693580,1701431,1709285,1718464,1726139,1732927]

# This list contains the new cases per day.
new_cases = [total_cases[i] - total_cases[i - 1] for i in range(1, len(total_cases))]
new_cases.insert(0, total_cases[0])

# This list contains the active cases.
active_cases = [328,421,524,729,956,1692,3018,5334,8355,10320,15682,20618,25979,32505,37010,43630,49806,56069,61702,69326,75575,83120,91699,100781,106725,113849,122377,128954,138274,148356,155920,163025,168597,175290,179270,186303,193034,199587,205137,209387,207380,212434,218243,225056,235312,240625,229953,231473,234643,237788,240722,244416,246584,249226,251346,253081,255654,257854,260219,260200,261439,262161,263702,264878,267061,268273,269804,270300,271015,272189,274046,275272,276735,277585,278235,278884,279492,280546,281625,282329,282960,283549,284159,283845,284358,281766,282579,283273,284119,284653,285039,285474,286096,286756,287136,287674,288144,288532,290047,291010,291707,292496,292947,293565,294238,294766,295475,295486,295844,296352,296406,296158,292892,289724,284193,275026,268272,261993,252919,244333,236291,227566,217901,209208,200810,192826,185496,177591,170561,163303,157206,152150,146693,140882,135888,130995,125745,120066,112196,109445,107163,103534,99756,95710,92572,89593,87218,84666,82888,83716,81071,77877,75374,72900,71615,70900,70507,69253,67872,66964,66485,66037,65456,65071,64187,63264,62813,62514,62393,62366,62236,62210,61923,62227,62210,62379,62826,62913,62878,62217,62469,62283,62422,62763,62938,62767,62612,62604,62585,63046,63455,63740,63598,63210,63144,63240,63713,64058,64333,64418,64470,64883,65156,65935,66662,67401,67527,67640,68143,68747,69981,70762,71365,71560,71801,72496,73184,73963,75103,76093,76604,76888,77431,78981,80032,80957,82260,83051,83643,84860,86325,88308,89894,91092,92438,93441,95076,96552,99072,101592,104235,106894,109635,112864,116809,121316,126136,130606,133137,136451,140913,145464,150443,155888,159337,163580,168619,173258,178481,184689,191639,196730,202590,208874,215555,224138,233436,243437,252843,261103,268302,276920,286600,296071,305934,315663,324417,333130,342612,351746,361792,373038,381201,389441,397337,405362,416331,427540,437651,446918,452655,461914,472027,484590,500370,512286,525540,537236,547238,558384,573523,590082,607057,621768,634865,648081,660938,674143,686475,704424,717388,728151,738888,749533,760877,772908,785605,796501,806027,815609,823516,831285,841087,849835,857627,862988,866798,869847,872171,875646,879348,884933,888875,892279,894905,896845,900817,903881,906518,907934,906288,907874,907447,907180,908496,906780,903138,899007,895656,892802,893698,892426,890065,887310,883330,878975,876977,875052,873709,871308,866964]

# This list contains the total deaths so far.
total_deaths = [0,0,3,10,18,24,41,67,100,129,209,290,447,598,784,1019,1415,1722,2140,2677,3368,3888,4490,5327,6155,6991,7968,8960,9959,10927,11893,12838,13688,14612,15500,16106,17131,17671,18298,18929,19693,20354,20861,21291,21908,22275,22623,23144,23474,23780,24069,24368,24648,24944,25204,25956,26365,26585,26771,27254,27498,27914,28080,28255,28411,28584,28776,28932,29101,29212,29340,29465,29569,29689,29895,30037,30140,30241,30340,30419,30509,30580,30671,30758,30876,30968,30997,31038,31113,31199,31276,31337,31420,31470,31507,31548,31594,31642,31688,31755,31770,31811,31864,31910,31942,31969,32017,32048,32080,32112,32129,32143,32166,32191,32215,32248,32267,32292,32311,32343,32375,32392,32403,32445,32462,32495,32518,32535,32552,32570,32584,32602,32617,32656,32665,32679,32689,32708,32719,32734,32754,32765,32773,32780,32791,32801,32811,32817,32822,32831,32840,32847,32857,32874,32887,32895,32901,32910,32920,32932,32934,32937,32937,32950,32967,32972,32980,32987,32994,33005,33012,33021,33030,33039,33052,33059,33065,33073,33072,33091,33100,33104,33109,33109,33116,33116,33128,33141,33156,33163,33168,33170,33177,33181,33183,33188,33193,33202,33206,33215,33229,33233,33246,33266,33287,33290,33300,33317,33329,33353,33363,33371,33377,33379,33391,33403,33426,33441,33451,33466,33477,33497,33507,33522,33536,33549,33556,33565,33580,33600,33621,33643,33655,33668,33687,33698,33710,33743,33769,33785,33801,33821,33850,33876,33898,33926,33955,33976,33997,34033,34058,34103,34136,34186,34213,34233,34271,34310,34345,34388,34436,34472,34512,34581,34654,34728,34829,34886,34940,34985,35097,35178,35234,35326,35421,35500,35587,35707,35833,35945,36101,36222,36307,36402,36581,36735,36883,37013,37129,37232,37349,37518,37675,37868,38007,38142,38244,38368,38561,38718,38888,39149,39298,39447,39592,39808,40016,40184,40448,40641,40800,41004,41164,41380,41620,41848,42074,42212,42388,42605,42815,42963,43200,43388,43539,43701,43879,44070,44279,44430,44591,44827,44979,45129,45301,45466,45633,45807,45947,46069,46188,46335,46457,46676,46821,46919,47020,47134,47258,47385,47497,47620,47720,47827,47949,48042,48184,48309,48410,48498,48579]

# This list contains the new deaths per day.
new_deaths = [total_deaths[i] - total_deaths[i - 1] for i in range(1, len(total_deaths))]
new_deaths.insert(0, total_deaths[0])

# This list contains the total number of recovered people.
total_recovered = [total_cases[i] - active_cases[i] - total_deaths[i] for i in range(len(total_cases))]

# This list contains the number of recovered people per day.
new_recoveries = [total_recovered[i] - total_recovered[i - 1] for i in range(1, len(total_recovered))]
new_recoveries.insert(0, total_recovered[0])

# This list contains the average recovery rate till the current day.
recovery_rate = [total_recovered[i] * 100 / total_cases[i] for i in range(len(total_cases))]

# This list contains the average death rate till the current day.
death_rate = [total_deaths[i] * 100 / total_cases[i] for i in range(len(total_cases))]

# The list contains the percentage of cases that don't have an outcome yet.
no_outcome = [active_cases[i] * 100 / total_cases[i] for i in range(len(total_cases))]

# This list contains the daily recovery rate.
daily_recovery_rate = [new_recoveries[i] * 100 / (active_cases[i - 1]) for i in range(len(total_cases))]

# This list contains the daily death rate.
daily_death_rate = [new_deaths[i] * 100 / (active_cases[i - 1]) for i in range(len(total_cases))]

# This list contains the seven day average recovery rate.
weekly_average_recovery_rate = [np.mean(daily_recovery_rate[i-6:i+1])
                                for i in range(len(total_cases))]

# This list contains the seven day average death rate.
weekly_average_death_rate = [np.mean(daily_death_rate[i-6:i+1])
                             for i in range(len(total_cases))]

# This list contains the ...
infection_rate = [new_cases[i] * 100 / active_cases[i - 1] for i in range(len(total_cases))]

covid = pd.DataFrame(data=list(zip(new_cases, active_cases, total_cases, new_recoveries, total_recovered, new_deaths,
                                   total_deaths, daily_recovery_rate, daily_death_rate, weekly_average_recovery_rate,
                                   weekly_average_death_rate, recovery_rate, death_rate, no_outcome, infection_rate)),
                     index=pd.date_range(start='3/12/2020', end='3/7/2021'),
                     columns=['New Cases', 'Active Cases', 'Total Cases', 'New Recoveries', 'Total Recovered',
                              'New Deaths', 'Total Deaths', 'Daily Recovery Rate (%)', 'Daily Death Rate (%)',
                              'Weekly Average Recovery Rate (%)', 'Weekly Average Death Rate(%)',
                              'Recovery Rate so Far(%)', 'Death Rate so Far (%)', 'No Outcome (%)', 'Infection Rate'])
covid.index.name = 'Date'
covid.to_csv('./covid_ny.csv')
